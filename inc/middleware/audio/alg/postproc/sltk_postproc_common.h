#ifndef SLTK_POSTPROC_COMMON_H_
#define SLTK_POSTPROC_COMMON_H_

#include "sltk_mem.h"

#define SLTK_CMDBASE_AFX_COMMON 0x1000
#define SLTK_CMDBASE_AFX_EQ     0xa000
#define SLTK_CMDBASE_AFX_DRC    0xa100
#define SLTK_CMDBASE_AFX_TSPS   0xa200
#define SLTK_CMDBASE_AFX_REV    0xa300
#define SLTK_CMDBASE_AFX_ECHO   0xa400
#define SLTK_CMDBASE_AFX_VSS    0xa500
#define SLTK_CMDBASE_AFX_TRUEVB 0xa600

#define SLTK_CMDBASE_AFX_BUFFER_CTL    0xf000

#define MS_300  64
#define MS_600  128
#define MS_900  192
#define MS_1200 256

enum {
    /* setting realtime prms */
    SLTK_CMD_AFX_COMMON_SETRTPRM = SLTK_CMDBASE_AFX_COMMON,
    /* reset handle used when on/off switch */
    SLTK_CMD_AFX_COMMON_RESET,

    /* equalizer specificial cmd */
    SLTK_CMD_AFX_EQ_SETPRESET = SLTK_CMDBASE_AFX_EQ,
    SLTK_CMD_AFX_EQ_SETSECT,
    SLTK_CMD_AFX_EQ_SETPREAMP,
    SLTK_CMD_AFX_EQ_LOADCOEFFS,

    SLTK_CMD_AFX_TSPS_SET_ATUNE_EN   = SLTK_CMDBASE_AFX_TSPS,
    SLTK_CMD_AFX_TSPS_SET_ATUNE_PRM,

    SLTK_CMD_AFX_DRC_LIMITER_SETRT = SLTK_CMDBASE_AFX_DRC,
    SLTK_CMD_AFX_DRC_SETGAIN,
    SLTK_CMD_AFX_DRC_USE_CHANNEL_RESPECTIVE_GAIN,

    SLTK_CMD_AFX_SDPRO_SWITCH_MODE = SLTK_CMDBASE_AFX_VSS,
    
    SLTK_CMD_AFX_TVB_SETPRESET = SLTK_CMDBASE_AFX_TRUEVB,

    /* while we use dynamic buffer controll*/
    SLTK_CMD_INTALL_BUFFER   = SLTK_CMDBASE_AFX_BUFFER_CTL,
    SLTK_CMD_UNINTALL_BUFFER,
    SLTK_CMD_UPDATE_BUFFER,

    SLTK_CMD_GET_CPU_LOAD,
    SLTK_CMD_ASYNC_PRE_PROC,
};

typedef void (*afx_listener)(void* cookie, uint32_t cmd, uint32_t arg);
typedef afx_listener afx_hook_node_listener;

#define ROM_FUNC_PTR_HOOK_USE(func) ((uint32_t)func | 1)

typedef enum
{
    AFX_CMD_NONE,
    AFX_CMD_LOCK_WORK_FLOW,
    AFX_CMD_UNLOCK_WORK_FLOW,
    AFX_CMD_DISABLE_WORK_FLOW_NODE,
    AFX_CMD_ENABLE_WORK_FLOW_NODE,
    AFX_CMD_REFRESH_WORK_FLOW_NODE,
    AFX_CMD_UPLOAD_WORK_FLOW_NODE_CPU_LOAD,
    AFX_CMD_REFRESH_CPU_LOAD,
    AFX_CMD_QUERY_CPU1_LOAD,
    AFX_CMD_GET_WORK_FLOW_NODE_CPU_LOAD,
    AFX_CMD_QUERY_MASS_EFFECTS,
    AFX_CMD_QUERY_AUTOTUNE_STATUS
}afx_cmd;

#endif
