#ifndef FRAMEWORK_OBSERVER_H
#define FRAMEWORK_OBSERVER_H

#include "sys_inc.h"
#include "sys_types.h"

typedef uint32_t (*obclbk)(uint32_t cookie, uint32_t cmd, uint32_t val, void *data);

typedef enum _observer_id {
    OBSERVER_START = 0,
    OBSERVER_BT_STACK_SERVICE,
    OBSERVER_BT_INFO_SERVICE,
    OBSERVER_BT_A_SERVICE,
    OBSERVER_AIR_SERVICE,
    OBSERVER_APP_SERVICE,
    OBSERVER_A2DP_SPACE_SERVICE,
    OBSERVER_JUPLUS_SERVICE,
    OBSERVER_END,
    OBSERVER_NUM,
}observer_id;

typedef enum _bt_info_service_observer_cmd {
    BT_INFO_SERVICE_OBSERVER_FREQ_DRI_REQ = 0,
    BT_INFO_SERVICE_OBSERVER_FREQ_DRI_CHANGE,
    BT_INFO_SERVICE_OBSERVER_RF_PARAM_REQ,
    BT_INFO_SERVICE_OBSERVER_RF_PARAM_CHANGE,
    BT_INFO_SERVICE_OBSERVER_LINK_ADDR_REQ,
    BT_INFO_SERVICE_OBSERVER_LINK_ADDR_SECOND_REQ,
    BT_INFO_SERVICE_OBSERVER_LINK_KEY_REQ,
    BT_INFO_SERVICE_OBSERVER_LINK_KEY_CHANGE,
    BT_INFO_SERVICE_OBSERVER_PIN_CODE_REQ,
    BT_INFO_SERVICE_OBSERVER_AUTH_FAIL,
}setting_service_observer_cmd;

typedef enum _bt_stack_service_observer_cmd {
    BT_STACK_SERVICE_OBSERVER_CON_STATUS_CHANGE,
    BT_STACK_SERVICE_OBSERVER_ACTIVE_STATUS_CHANGE,
    BT_STACK_SERVICE_OBSERVER_SCAN_STATUS_CHANGE,
    BT_STACK_SERVICE_OBSERVER_AVDTP_STATUS_CHANGE,
    BT_STACK_SERVICE_OBSERVER_AVCTP_STATUS_CHANGE,
    BT_STACK_SERVICE_OBSERVER_HFP_STATUS_CHANGE,
    BT_STACK_SERVICE_OBSERVER_OTA_STATUS_CHANGE,
    BT_STACK_SERVICE_OBSERVER_OTHER_STATUS_CHANGE,
    BT_STACK_SERVICE_OBSERVER_EXIT_SNIFF_STATE_GET,
}bt_stack_service_observer_cmd;

typedef enum _app_service_observer_cmd {
    APP_SERVICE_OBSERVER_AIR_PARAM_GET,
    APP_SERVICE_OBSERVER_AIR_SIRI_CONFIG_GET,
    APP_SERVICE_OBSERVER_AIR_SIRI_STATUS_CHANGE,
    APP_SERVICE_OBSERVER_MUSIC_PLAY_STATUS_CHANGE,
    APP_SERVICE_OBSERVER_IN_CASE_STATE_GET,
    APP_SERVICE_OBSERVER_NEED_RECONNECT_GET,
    APP_SERVICE_OBSERVER_MOTION_ONLINE_GET,
    APP_SERVICE_OBSERVER_MOTION_SELECT_GET,
    APP_SERVICE_OBSERVER_GET_PEER_DIS_REASON,
    APP_SERVICE_OBSERVER_MOTION_SENSOR_DETACH_GET,
}app_service_observer_cmd;


typedef enum _a2dp_space_service_observer_cmd {
    A2DP_SPACE_SERVICE_OBSERVER_INFO_UPDATE,
}a2dp_space_service_observer_cmd;


#define OBSERVER_INVALID 0xFFFFFFFF
#define OBSERVER_OK      0
#define OBSERVER_ID_VAILD(id) ( (id) >= OBSERVER_START && (id) <= OBSERVER_END )

void observer_resiger_callback(obclbk cb, observer_id id);
/*Located in ram 'd be better*/
uint32_t observer_query_fireware_by_id(observer_id id, uint32_t cookie, uint32_t cmd, uint32_t val, void *data);

#endif
